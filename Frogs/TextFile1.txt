  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  //Collision With Bottom Of Hitboxes
    tempx = ((eHitbox.y + eHitbox.height) - b)/m;
    tempy = eHitbox.y + eHitbox.height;
    Console.WriteLine("Bottom = " + ((Platform)entity).sBottom);
    //Make sure is within bounds of entity hitbox
    if (tempx > eHitbox.x && tempx < eHitbox.x + eHitbox.width)
    {
        //Make sure tongue end is closer to the mouse than the player
        //Prevents intersection with opposite direction
        if (Utils.getDistance(x, y, tempx, tempy) > Utils.getDistance(mouse.X + Camera.X, mouse.Y + Camera.Y, tempx, tempy))
        {
            //Console.WriteLine(eHitbox.x + " > " + tempx + " > " + (eHitbox.x + eHitbox.width));
            //Console.WriteLine(Utils.getDistance(x, y, tempx, tempy) + " > " + Utils.getDistance(mouse.X + Camera.X, mouse.Y + Camera.Y, tempx, tempy) + " \n");
            isSwinging = true;

            //Console.WriteLine("Tongue End Added: " + tempx + ", " + tempy + " | Distance = " + Utils.getDistance(tempx, tempy, x, y));
            tongueEnds.Add(new Vector2(tempx, tempy));

            sox = tempx;
            soy = tempy;

            testx = sox;
            testy = soy;
        }
    }


    
        public static Texture2D frog;
        public static Rectangle[] idle;
        public static Rectangle[] jump;
        public static Rectangle[] openMouth;
        public static Rectangle[] swing;

        public static Rectangle[] tongueBody;
        public static Rectangle[] tongueStuck;
        public static Rectangle[] tongueEnd;

            spriteBatch.Draw(PlayerSprites.player,
        new Rectangle((int)(x - 40 * m - Camera.X), (int)(y - 28.5*m - Camera.Y), (int)(80 * m), (int)(60 * m)),
        sourceRectangle: PlayerSprites.idle[0],
        color: Color.White);